server.port=9099

apache.tomcat.webGL.project.path=C:/Program Files/Apache Software Foundation/Tomcat 9.0/webapps/plmdocs/

# Set here configurations for the database connection
# Connection url for the database "Digitectura"
spring.datasource.url = jdbc:mysql://localhost:3306/plm?useSSL=false&allowPublicKeyRetrieval=true&useServerPrepStmts=false&rewriteBatchedStatements=true

# Username and password
spring.datasource.username = root
spring.datasource.password = root


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.testWhileIdle = true
spring.datasource.tomcat.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
spring.jpa.properties.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

spring.sql.init.mode=always

spring.sql.init.continue-on-error=true
